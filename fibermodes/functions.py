
from math import factorial

# A[(k, m, i)]
A = {
    # First devivative
    # Three points
    (1, 3, 0): (-3, 4, -1),
    (1, 3, 1): (-1, 0, 1),
    (1, 3, 2): (1, -4, 3),
    # Four points
    (1, 4, 0): (-11, 18, -9, 2),
    (1, 4, 1): (-2, -3, 6, -1),
    (1, 4, 2): (1, -6, 3, 2),
    (1, 4, 3): (-2, 9, -18, 11),
    # Five points
    (1, 5, 0): (-50, 96, -72, 32, -6),
    (1, 5, 1): (-6, -20, 36, -12, 2),
    (1, 5, 2): (2, -16, 0, 16, -2),
    (1, 5, 3): (-2, 12, -36, 20, 6),
    (1, 5, 4): (6, -32, 72, -96, 50),
    # Six points
    (1, 6, 0): (-274, 600, -600, 400, -150, 24),
    (1, 6, 1): (-24, -130, 240, -120, 40, -6),
    (1, 6, 2): (6, -60, -40, 120, -30, 4),
    (1, 6, 3): (-4, 30, -120, 40, 60, -6),
    (1, 6, 4): (6, -40, 120, -240, 130, 24),
    (1, 6, 5): (-24, 150, -400, 600, -600, 274),

    # Second derivative
    # Three points
    (2, 3, 0): (1, -2, 1),
    (2, 3, 1): (1, -2, 1),
    (2, 3, 2): (1, -2, 1),

    # Four points
    (2, 4, 0): (6, -15, 12, -3),
    (2, 4, 1): (3, -6, 3, 0),
    (2, 4, 2): (0, 3, -6, 3),
    (2, 4, 3): (-3, 12, -15, 6),

    # Five points
    (2, 5, 0): (35, -104, 114, -56, 11),
    (2, 5, 1): (11, -20, 6, 4, -1),
    (2, 5, 2): (-1, 16, -30, 16, -1),
    (2, 5, 3): (-1, 4, 6, -20, 11),
    (2, 5, 4): (11, -56, 114, -104, 35),

    # Six points
    (2, 6, 0): (225, -770, 1070, -780, 305, -50),
    (2, 6, 1): (50, -75, -20, 70, -30, 5),
    (2, 6, 2): (-5, 80, -150, 80, -5, 0),
    (2, 6, 3): (0, -5, 80, -150, 80, -5),
    (2, 6, 4): (5, -30, 70, -20, -75, 50),
    (2, 6, 5): (-50, 305, -780, 1070, -770, 225),
}


def derivative(f, x, k, m, j, h, *args):
    """Numerical differentiation

    f: function
    x: parameter
    k: differentiation order (1 to 5)
    m: number of points (3 to 6)
    j: central point (0 to m-1)
    h: distance between points
    *args: other function arguments

    """
    C = factorial(k) / (factorial(m-1) * h**k)
    return C * sum(A[(k, m, j)][i] * f(x + (i-j) * h, *args) for i in range(m))
